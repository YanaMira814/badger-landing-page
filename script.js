// –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ —Å–µ–∫—Ü–∏—è–º
function scrollToSection(sectionId) {
    const section = document.getElementById(sectionId);
    if (section) {
        section.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
        });
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('badgeForm');
    
    if (form) {
        form.addEventListener('submit', function(e) {
            e.preventDefault();
            
            // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
            const formData = new FormData(form);
            const name = formData.get('name');
            const email = formData.get('email');
            const message = formData.get('message');
            const newsletter = formData.get('newsletter');
            
            // –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
            if (!name || !email) {
                showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è!', 'error');
                return;
            }
            
            // –ò–º–∏—Ç–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
            showNotification('–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ! –ú—ã —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å —Ç–æ–±–æ–π! ü¶°', 'success');
            
            // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
            form.reset();
        });
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
    addScrollAnimations();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
    addInteractiveEffects();
});

// –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showNotification(message, type = 'info') {
    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const notification = document.createElement('div');
    notification.className = `notification notification-${type}`;
    notification.innerHTML = `
        <div class="notification-content">
            <span class="notification-icon">${type === 'success' ? 'ü¶°' : '‚ö†Ô∏è'}</span>
            <span class="notification-message">${message}</span>
            <button class="notification-close" onclick="this.parentElement.parentElement.remove()">√ó</button>
        </div>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: ${type === 'success' ? 'linear-gradient(45deg, #4ecdc4, #44a08d)' : 'linear-gradient(45deg, #ff6b6b, #ff8e53)'};
        color: white;
        padding: 15px 20px;
        border-radius: 10px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
        z-index: 1000;
        transform: translateX(400px);
        transition: transform 0.3s ease;
        max-width: 300px;
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –¥–æ–∫—É–º–µ–Ω—Ç
    document.body.appendChild(notification);
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
    setTimeout(() => {
        notification.style.transform = 'translateX(0)';
    }, 100);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
        if (notification.parentElement) {
            notification.style.transform = 'translateX(400px)';
            setTimeout(() => {
                if (notification.parentElement) {
                    notification.remove();
                }
            }, 300);
        }
    }, 5000);
}

// –ê–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
function addScrollAnimations() {
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };
    
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateY(0)';
            }
        });
    }, observerOptions);
    
    // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏ —Ñ–∞–∫—Ç–æ–≤
    document.querySelectorAll('.fact-card').forEach(card => {
        card.style.opacity = '0';
        card.style.transform = 'translateY(30px)';
        card.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
        observer.observe(card);
    });
    
    // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ —à—É—Ç–∫–∞–º–∏
    document.querySelectorAll('.joke-card').forEach(card => {
        card.style.opacity = '0';
        card.style.transform = 'translateY(30px)';
        card.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
        observer.observe(card);
    });
    
    // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –≥–∞–ª–µ—Ä–µ–∏
    document.querySelectorAll('.gallery-item').forEach(item => {
        item.style.opacity = '0';
        item.style.transform = 'scale(0.8)';
        item.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
        observer.observe(item);
    });
}

// –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
function addInteractiveEffects() {
    // –≠—Ñ—Ñ–µ–∫—Ç –ø–∞—Ä–∞–ª–ª–∞–∫—Å–∞ –¥–ª—è –ø–ª–∞–≤–∞—é—â–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    window.addEventListener('scroll', () => {
        const scrolled = window.pageYOffset;
        const parallaxElements = document.querySelectorAll('.badge-float');
        
        parallaxElements.forEach((element, index) => {
            const speed = 0.5 + (index * 0.1);
            element.style.transform = `translateY(${scrolled * speed}px)`;
        });
    });
    
    // –≠—Ñ—Ñ–µ–∫—Ç –Ω–∞–≤–µ–¥–µ–Ω–∏—è –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫
    document.querySelectorAll('.fact-card, .joke-card').forEach(card => {
        card.addEventListener('mouseenter', function() {
            this.style.transform = this.classList.contains('fact-card') ? 
                'translateY(-10px) scale(1.02)' : 'scale(1.05)';
        });
        
        card.addEventListener('mouseleave', function() {
            this.style.transform = this.classList.contains('fact-card') ? 
                'translateY(0) scale(1)' : 'scale(1)';
        });
    });
    
    // –≠—Ñ—Ñ–µ–∫—Ç –∫–ª–∏–∫–∞ –¥–ª—è –∏–∫–æ–Ω–æ–∫ –∫—É–ª—å—Ç—É—Ä—ã
    document.querySelectorAll('.culture-icon').forEach(icon => {
        icon.addEventListener('click', function() {
            this.style.transform = 'scale(1.2) rotate(10deg)';
            setTimeout(() => {
                this.style.transform = 'scale(1) rotate(0deg)';
            }, 300);
        });
    });
    
    // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –¥–∏–∞–≥—Ä–∞–º–º—ã
    document.querySelectorAll('.chart-item').forEach(item => {
        item.addEventListener('mouseenter', function() {
            const bar = this.querySelector('.chart-bar');
            if (bar) {
                bar.style.transform = 'scaleY(1.1)';
            }
        });
        
        item.addEventListener('mouseleave', function() {
            const bar = this.querySelector('.chart-bar');
            if (bar) {
                bar.style.transform = 'scaleY(1)';
            }
        });
    });
}

// –°–ª—É—á–∞–π–Ω—ã–µ —Ñ–∞–∫—Ç—ã –æ –±–∞—Ä—Å—É–∫–∞—Ö
const randomBadgeFacts = [
    "–ó–Ω–∞–µ—à—å –ª–∏ —Ç—ã, —á—Ç–æ –±–∞—Ä—Å—É–∫–∏ –º–æ–≥—É—Ç –±–µ–≥–∞—Ç—å —Å–æ —Å–∫–æ—Ä–æ—Å—Ç—å—é –¥–æ 30 –∫–º/—á?",
    "–ë–∞—Ä—Å—É–∫–∏ - –æ—Ç–ª–∏—á–Ω—ã–µ –ø–ª–æ–≤—Ü—ã –∏ –º–æ–≥—É—Ç –Ω—ã—Ä—è—Ç—å –Ω–∞ –≥–ª—É–±–∏–Ω—É –¥–æ 2 –º–µ—Ç—Ä–æ–≤!",
    "–£ –±–∞—Ä—Å—É–∫–æ–≤ –æ—Ç–ª–∏—á–Ω–∞—è –ø–∞–º—è—Ç—å - –æ–Ω–∏ –ø–æ–º–Ω—è—Ç —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–≤–æ–∏—Ö –Ω–æ—Ä!",
    "–ë–∞—Ä—Å—É–∫–∏ –º–æ–≥—É—Ç –∂–∏—Ç—å –¥–æ 14 –ª–µ—Ç –≤ –¥–∏–∫–æ–π –ø—Ä–∏—Ä–æ–¥–µ!",
    "–ë–∞—Ä—Å—É–∫–∏ - –Ω–∞—Å—Ç–æ—è—â–∏–µ —á–∏—Å—Ç—é–ª–∏ –∏ —Ä–µ–≥—É–ª—è—Ä–Ω–æ —É–±–∏—Ä–∞—é—Ç —Å–≤–æ–∏ –Ω–æ—Ä—ã!",
    "–ë–∞—Ä—Å—É–∫–∏ –º–æ–≥—É—Ç –≤—ã—Ä—ã—Ç—å –Ω–æ—Ä—É –≥–ª—É–±–∏–Ω–æ–π –¥–æ 3 –º–µ—Ç—Ä–æ–≤ –∑–∞ –æ–¥–Ω—É –Ω–æ—á—å!"
];

// –ü–æ–∫–∞–∑ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ñ–∞–∫—Ç–∞
function showRandomFact() {
    const randomFact = randomBadgeFacts[Math.floor(Math.random() * randomBadgeFacts.length)];
    showNotification(randomFact, 'info');
}

// –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ñ–∞–∫—Ç–∞
document.addEventListener('DOMContentLoaded', function() {
    // –°–æ–∑–¥–∞–µ–º –ø–ª–∞–≤–∞—é—â—É—é –∫–Ω–æ–ø–∫—É
    const floatingButton = document.createElement('button');
    floatingButton.innerHTML = 'ü¶°';
    floatingButton.className = 'floating-fact-button';
    floatingButton.style.cssText = `
        position: fixed;
        bottom: 20px;
        left: 20px;
        width: 60px;
        height: 60px;
        border-radius: 50%;
        background: linear-gradient(45deg, #ff6b6b, #ff8e53);
        border: none;
        color: white;
        font-size: 24px;
        cursor: pointer;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
        z-index: 1000;
        transition: all 0.3s ease;
    `;
    
    floatingButton.addEventListener('click', showRandomFact);
    floatingButton.addEventListener('mouseenter', function() {
        this.style.transform = 'scale(1.1) rotate(10deg)';
    });
    floatingButton.addEventListener('mouseleave', function() {
        this.style.transform = 'scale(1) rotate(0deg)';
    });
    
    document.body.appendChild(floatingButton);
});

// –≠—Ñ—Ñ–µ–∫—Ç –ø–µ—á–∞—Ç–Ω–æ–π –º–∞—à–∏–Ω–∫–∏ –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
function typeWriter(element, text, speed = 100) {
    let i = 0;
    element.innerHTML = '';
    
    function type() {
        if (i < text.length) {
            element.innerHTML += text.charAt(i);
            i++;
            setTimeout(type, speed);
        }
    }
    
    type();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∞ –ø–µ—á–∞—Ç–Ω–æ–π –º–∞—à–∏–Ω–∫–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', function() {
    const heroTitle = document.querySelector('.hero-title');
    if (heroTitle) {
        const originalText = heroTitle.textContent;
        setTimeout(() => {
            typeWriter(heroTitle, originalText, 150);
        }, 1000);
    }
});

// –ö–æ–Ω—Å–æ–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
console.log('ü¶° –ë–∞—Ä—Å—É–∫–∏ - —ç—Ç–æ –∫—Ä—É—Ç–æ! ü¶°');
console.log('–°–æ–∑–¥–∞–Ω–æ —Å –ª—é–±–æ–≤—å—é –∫ –ø—Ä–∏—Ä–æ–¥–µ –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é');
console.log('–§–∞–∫—Ç –¥–Ω—è: –ë–∞—Ä—Å—É–∫–∏ –º–æ–≥—É—Ç –≤—ã—Ä—ã—Ç—å –Ω–æ—Ä—É –≥–ª—É–±–∏–Ω–æ–π –¥–æ 3 –º–µ—Ç—Ä–æ–≤!'); 